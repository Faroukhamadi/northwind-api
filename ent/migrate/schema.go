// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CityColumns holds the columns for the "city" table.
	CityColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "district", Type: field.TypeString},
		{Name: "population", Type: field.TypeInt},
		{Name: "country_capital", Type: field.TypeString, Unique: true, Size: 3},
	}
	// CityTable holds the schema information for the "city" table.
	CityTable = &schema.Table{
		Name:       "city",
		Columns:    CityColumns,
		PrimaryKey: []*schema.Column{CityColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "city_country_capital",
				Columns:    []*schema.Column{CityColumns[4]},
				RefColumns: []*schema.Column{CountryColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// CountryColumns holds the columns for the "country" table.
	CountryColumns = []*schema.Column{
		{Name: "code", Type: field.TypeString, Size: 3},
		{Name: "name", Type: field.TypeString},
		{Name: "region", Type: field.TypeString},
		{Name: "surface_area", Type: field.TypeFloat64},
		{Name: "indep_year", Type: field.TypeInt16},
		{Name: "population", Type: field.TypeInt},
		{Name: "life_expectancy", Type: field.TypeFloat64},
		{Name: "gnp", Type: field.TypeFloat64},
		{Name: "gnp_old", Type: field.TypeFloat64},
		{Name: "local_name", Type: field.TypeString},
		{Name: "government_form", Type: field.TypeString},
		{Name: "head_of_state", Type: field.TypeString, Nullable: true},
		{Name: "code2", Type: field.TypeString, Size: 2},
	}
	// CountryTable holds the schema information for the "country" table.
	CountryTable = &schema.Table{
		Name:       "country",
		Columns:    CountryColumns,
		PrimaryKey: []*schema.Column{CountryColumns[0]},
	}
	// CountryLanguageColumns holds the columns for the "country_language" table.
	CountryLanguageColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "country_code", Type: field.TypeString},
		{Name: "language", Type: field.TypeString},
		{Name: "is_official", Type: field.TypeBool},
		{Name: "percentage", Type: field.TypeFloat64},
		{Name: "country_language", Type: field.TypeString, Unique: true, Size: 3},
	}
	// CountryLanguageTable holds the schema information for the "country_language" table.
	CountryLanguageTable = &schema.Table{
		Name:       "country_language",
		Columns:    CountryLanguageColumns,
		PrimaryKey: []*schema.Column{CountryLanguageColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "country_language_country_language",
				Columns:    []*schema.Column{CountryLanguageColumns[5]},
				RefColumns: []*schema.Column{CountryColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CityTable,
		CountryTable,
		CountryLanguageTable,
	}
)

func init() {
	CityTable.ForeignKeys[0].RefTable = CountryTable
	CityTable.Annotation = &entsql.Annotation{
		Table: "city",
	}
	CountryTable.Annotation = &entsql.Annotation{
		Table: "country",
	}
	CountryLanguageTable.ForeignKeys[0].RefTable = CountryTable
	CountryLanguageTable.Annotation = &entsql.Annotation{
		Table: "country_language",
	}
}
