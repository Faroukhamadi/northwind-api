// Code generated by entc, DO NOT EDIT.

package city

const (
	// Label holds the string label denoting the city type in the database.
	Label = "city"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDistrict holds the string denoting the district field in the database.
	FieldDistrict = "district"
	// FieldPopulation holds the string denoting the population field in the database.
	FieldPopulation = "population"
	// EdgeCountry holds the string denoting the country edge name in mutations.
	EdgeCountry = "country"
	// CountryFieldID holds the string denoting the ID field of the Country.
	CountryFieldID = "code"
	// Table holds the table name of the city in the database.
	Table = "city"
	// CountryTable is the table that holds the country relation/edge.
	CountryTable = "city"
	// CountryInverseTable is the table name for the Country entity.
	// It exists in this package in order to avoid circular dependency with the "country" package.
	CountryInverseTable = "country"
	// CountryColumn is the table column denoting the country relation/edge.
	CountryColumn = "country_capital"
)

// Columns holds all SQL columns for city fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldDistrict,
	FieldPopulation,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "city"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"country_capital",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
